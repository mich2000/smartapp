{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20","program":"/home/mich/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","email","/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","-C","metadata=d5c04fead6b0205c","-C","extra-filename=-d5c04fead6b0205c","--out-dir","/home/mich/School/smartapp/code/jwt-gang/target/rls/debug/deps","-L","dependency=/home/mich/School/smartapp/code/jwt-gang/target/rls/debug/deps","--extern","base64=/home/mich/School/smartapp/code/jwt-gang/target/rls/debug/deps/libbase64-49de4105eb347adf.rmeta","--extern","chrono=/home/mich/School/smartapp/code/jwt-gang/target/rls/debug/deps/libchrono-4ca7d3a741ca8c41.rmeta","--extern","encoding=/home/mich/School/smartapp/code/jwt-gang/target/rls/debug/deps/libencoding-ca1e73ab3b45ad43.rmeta","--extern","lazy_static=/home/mich/School/smartapp/code/jwt-gang/target/rls/debug/deps/liblazy_static-57a7edc7f441d44c.rmeta","--extern","rand=/home/mich/School/smartapp/code/jwt-gang/target/rls/debug/deps/librand-ba78ff1d2a20a6a5.rmeta","--extern","time=/home/mich/School/smartapp/code/jwt-gang/target/rls/debug/deps/libtime-697bf6d1c06bdb6f.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/mich/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/mich/School/smartapp/code/jwt-gang/target/rls/debug/deps/libemail-d5c04fead6b0205c.rmeta"},"prelude":{"crate_id":{"name":"email","disambiguator":[9005535316859150686,17678405516036517630]},"crate_root":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src","external_crates":[{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[18437716656233032650,2349106724991734091]}},{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[16851962707842592855,4932765248485690217]}},{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3049591816127030880,10952373373500329976]}},{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11587085401131637304,2097967498245787009]}},{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[697141649018154369,16548652339936893370]}},{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[15777040323210795675,4562741973928336648]}},{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15931681355194650171,7679759071890480571]}},{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[16378405889910241769,9643272937548158260]}},{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[8261542656080474758,5147161130074218296]}},{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[1712641478249352838,12464696676097716113]}},{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[3715598662871405823,1939556143240013170]}},{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[4641845549064414815,7418938888650694907]}},{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[18127448783747998133,9149995038350923488]}},{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[8742225116956546677,8424782546207546390]}},{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","num":15,"id":{"name":"base64","disambiguator":[8393586577405453617,335221060381794903]}},{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","num":16,"id":{"name":"byteorder","disambiguator":[13987326121765680516,15480452527767592261]}},{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","num":17,"id":{"name":"safemem","disambiguator":[6466315095714724477,2780119194184464163]}},{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","num":18,"id":{"name":"encoding","disambiguator":[17793833833843397095,6243423928181354225]}},{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","num":19,"id":{"name":"encoding_index_singlebyte","disambiguator":[4970592395300116375,5736071049059979698]}},{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","num":20,"id":{"name":"encoding_index_korean","disambiguator":[11895082027302257870,6111327179636740091]}},{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","num":21,"id":{"name":"encoding_index_japanese","disambiguator":[18067622983738362290,15990657758102671838]}},{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","num":22,"id":{"name":"encoding_index_simpchinese","disambiguator":[10769891773521145380,7325415883004124570]}},{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","num":23,"id":{"name":"encoding_index_tradchinese","disambiguator":[11402454836510179418,15400025371276900046]}},{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","num":24,"id":{"name":"chrono","disambiguator":[9326645967516263230,5673742693699461794]}},{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","num":25,"id":{"name":"time","disambiguator":[7583239604586021779,4723766294677151697]}},{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","num":26,"id":{"name":"libc","disambiguator":[6426273867948086098,3470844833798165159]}},{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","num":27,"id":{"name":"num_integer","disambiguator":[8897552070262891555,10292635630538747399]}},{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","num":28,"id":{"name":"num_traits","disambiguator":[12133124662974312205,1986434912225857795]}},{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","num":29,"id":{"name":"rand","disambiguator":[3627758221547242628,13144120352340293705]}},{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","num":30,"id":{"name":"lazy_static","disambiguator":[4429584372382556774,11934523189258823667]}}],"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","byte_start":0,"byte_end":542,"line_start":1,"line_end":33,"column_start":1,"column_end":13}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":376},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","byte_start":208,"byte_end":214,"line_start":12,"line_end":12,"column_start":5,"column_end":11},"alias_span":null,"name":"Header","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":393},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","byte_start":220,"byte_end":229,"line_start":13,"line_end":13,"column_start":5,"column_end":14},"alias_span":null,"name":"HeaderMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":213},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","byte_start":235,"byte_end":245,"line_start":14,"line_end":14,"column_start":5,"column_end":15},"alias_span":null,"name":"HeaderIter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":179},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","byte_start":251,"byte_end":261,"line_start":15,"line_end":15,"column_start":5,"column_end":15},"alias_span":null,"name":"FromHeader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":181},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","byte_start":267,"byte_end":275,"line_start":16,"line_end":16,"column_start":5,"column_end":13},"alias_span":null,"name":"ToHeader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":183},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","byte_start":281,"byte_end":295,"line_start":17,"line_end":17,"column_start":5,"column_end":19},"alias_span":null,"name":"ToFoldedHeader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":407},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","byte_start":318,"byte_end":325,"line_start":19,"line_end":19,"column_start":19,"column_end":26},"alias_span":null,"name":"Address","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":426},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","byte_start":327,"byte_end":334,"line_start":19,"line_end":19,"column_start":28,"column_end":35},"alias_span":null,"name":"Mailbox","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":460},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","byte_start":360,"byte_end":371,"line_start":21,"line_end":21,"column_start":5,"column_end":16},"alias_span":null,"name":"MimeMessage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":440},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","byte_start":377,"byte_end":394,"line_start":22,"line_end":22,"column_start":5,"column_end":22},"alias_span":null,"name":"MimeMultipartType","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","byte_start":0,"byte_end":542,"line_start":1,"line_end":33,"column_start":1,"column_end":13},"name":"","qualname":"::","value":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":79},{"krate":0,"index":87},{"krate":0,"index":100},{"krate":0,"index":127},{"krate":0,"index":151},{"krate":0,"index":163},{"krate":0,"index":236},{"krate":0,"index":287}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":21},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rfc5322","qualname":"::rfc5322","value":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":35},{"krate":0,"index":39},{"krate":0,"index":44},{"krate":0,"index":72},{"krate":0,"index":74}],"decl_id":null,"docs":" Module with helpers for dealing with RFC 5322\n","sig":null,"attributes":[{"value":"! Module with helpers for dealing with RFC 5322","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":544,"byte_end":593,"line_start":1,"line_end":1,"column_start":1,"column_end":50}}]},{"kind":"Const","id":{"krate":0,"index":29},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":733,"byte_end":749,"line_start":7,"line_end":7,"column_start":11,"column_end":27},"name":"MIME_LINE_LENGTH","qualname":"::rfc5322::MIME_LINE_LENGTH","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":39},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":2140,"byte_end":2153,"line_start":56,"line_end":56,"column_start":12,"column_end":25},"name":"Rfc5322Parser","qualname":"::rfc5322::Rfc5322Parser","value":"Rfc5322Parser {  }","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43}],"decl_id":null,"docs":" RFC 5322 base parser for parsing\n  `atom`, `dot-atom`, `quoted-string`, `phrase`, `message`","sig":null,"attributes":[{"value":"/ RFC 5322 base parser for parsing","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":1685,"byte_end":1721,"line_start":46,"line_end":46,"column_start":1,"column_end":37}},{"value":"/  `atom`, `dot-atom`, `quoted-string`, `phrase`, `message`","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":1722,"byte_end":1783,"line_start":47,"line_end":47,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":1784,"byte_end":1787,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ This should prove useful for parsing other things that appear in RFC 5322,","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":1788,"byte_end":1866,"line_start":49,"line_end":49,"column_start":1,"column_end":79}},{"value":"/ as most are based off these core items.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":1867,"byte_end":1910,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":1911,"byte_end":1914,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ It also implements a stack for tracking the position.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":1915,"byte_end":1972,"line_start":52,"line_end":52,"column_start":1,"column_end":58}},{"value":"/ This allows the simple implementation of backtracking, by pushing the position","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":1973,"byte_end":2055,"line_start":53,"line_end":53,"column_start":1,"column_end":83}},{"value":"/ before a test and popping it if the test should fail.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":2056,"byte_end":2113,"line_start":54,"line_end":54,"column_start":1,"column_end":58}},{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":2114,"byte_end":2128,"line_start":55,"line_end":55,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":2343,"byte_end":2346,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Rfc5322Parser>::new","value":"pub fn new(&'s str) -> Rfc5322Parser","parent":null,"children":[],"decl_id":null,"docs":" Make a new parser, initialized with the given string.\n [unstable]\n","sig":null,"attributes":[{"value":"/ Make a new parser, initialized with the given string.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":2255,"byte_end":2312,"line_start":63,"line_end":63,"column_start":5,"column_end":62}},{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":2317,"byte_end":2331,"line_start":64,"line_end":64,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":2586,"byte_end":2599,"line_start":75,"line_end":75,"column_start":12,"column_end":25},"name":"push_position","qualname":"<Rfc5322Parser>::push_position","value":"pub fn push_position(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Push the current position onto the stack.\n [unstable]\n","sig":null,"attributes":[{"value":"/ Push the current position onto the stack.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":2510,"byte_end":2555,"line_start":73,"line_end":73,"column_start":5,"column_end":50}},{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":2560,"byte_end":2574,"line_start":74,"line_end":74,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":2745,"byte_end":2757,"line_start":81,"line_end":81,"column_start":12,"column_end":24},"name":"pop_position","qualname":"<Rfc5322Parser>::pop_position","value":"pub fn pop_position(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Move the position back to the last entry pushed\n [unstable]\n","sig":null,"attributes":[{"value":"/ Move the position back to the last entry pushed","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":2663,"byte_end":2714,"line_start":79,"line_end":79,"column_start":5,"column_end":56}},{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":2719,"byte_end":2733,"line_start":80,"line_end":80,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":3201,"byte_end":3216,"line_start":98,"line_end":98,"column_start":12,"column_end":27},"name":"consume_message","qualname":"<Rfc5322Parser>::consume_message","value":"pub fn consume_message(&mut Self) -> Option<(HeaderMap, String)>","parent":null,"children":[],"decl_id":null,"docs":" Consume a message from the input.","sig":null,"attributes":[{"value":"/ Consume a message from the input.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":2936,"byte_end":2973,"line_start":88,"line_end":88,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":2978,"byte_end":2981,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Returns as a map of the headers and the body text.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":2986,"byte_end":3040,"line_start":90,"line_end":90,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":3045,"byte_end":3048,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ A message is defined as:","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":3053,"byte_end":3081,"line_start":92,"line_end":92,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":3086,"byte_end":3089,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ `fields = *field","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":3094,"byte_end":3114,"line_start":94,"line_end":94,"column_start":5,"column_end":25}},{"value":"/ body = text","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":3119,"byte_end":3134,"line_start":95,"line_end":95,"column_start":5,"column_end":20}},{"value":"/ message = fields CRLF body`","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":3139,"byte_end":3170,"line_start":96,"line_end":96,"column_start":5,"column_end":36}},{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":3175,"byte_end":3189,"line_start":97,"line_end":97,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":4123,"byte_end":4137,"line_start":131,"line_end":131,"column_start":12,"column_end":26},"name":"consume_header","qualname":"<Rfc5322Parser>::consume_header","value":"pub fn consume_header(&mut Self) -> Option<Header>","parent":null,"children":[],"decl_id":null,"docs":" Consume a header from the input.","sig":null,"attributes":[{"value":"/ Consume a header from the input.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":3891,"byte_end":3927,"line_start":123,"line_end":123,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":3932,"byte_end":3935,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ A header is defined as:","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":3940,"byte_end":3967,"line_start":125,"line_end":125,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":3972,"byte_end":3975,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ `ftext = \"!\"..\"9\" / \";\"..\"~\"","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":3980,"byte_end":4012,"line_start":127,"line_end":127,"column_start":5,"column_end":37}},{"value":"/ field-name = 1*ftext","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":4017,"byte_end":4041,"line_start":128,"line_end":128,"column_start":5,"column_end":29}},{"value":"/ field = field-name *LWSP \":\" unstructured`","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":4046,"byte_end":4092,"line_start":129,"line_end":129,"column_start":5,"column_end":51}},{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":4097,"byte_end":4111,"line_start":130,"line_end":130,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":5052,"byte_end":5072,"line_start":156,"line_end":156,"column_start":12,"column_end":32},"name":"consume_unstructured","qualname":"<Rfc5322Parser>::consume_unstructured","value":"pub fn consume_unstructured(&mut Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Consume an unstructured from the input.\n [unstable]\n","sig":null,"attributes":[{"value":"/ Consume an unstructured from the input.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":4978,"byte_end":5021,"line_start":154,"line_end":154,"column_start":5,"column_end":48}},{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":5026,"byte_end":5040,"line_start":155,"line_end":155,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":5783,"byte_end":5809,"line_start":180,"line_end":180,"column_start":12,"column_end":38},"name":"consume_folding_whitespace","qualname":"<Rfc5322Parser>::consume_folding_whitespace","value":"pub fn consume_folding_whitespace(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Consume folding whitespace.","sig":null,"attributes":[{"value":"/ Consume folding whitespace.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":5589,"byte_end":5620,"line_start":174,"line_end":174,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":5625,"byte_end":5628,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ This is a CRLF followed by one or more whitespace character.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":5633,"byte_end":5697,"line_start":176,"line_end":176,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":5702,"byte_end":5705,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ Returns true if whitespace was consume","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":5710,"byte_end":5752,"line_start":178,"line_end":178,"column_start":5,"column_end":47}},{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":5757,"byte_end":5771,"line_start":179,"line_end":179,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":6734,"byte_end":6746,"line_start":211,"line_end":211,"column_start":12,"column_end":24},"name":"consume_word","qualname":"<Rfc5322Parser>::consume_word","value":"pub fn consume_word(&mut Self, bool) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Consume a word from the input.","sig":null,"attributes":[{"value":"/ Consume a word from the input.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":6492,"byte_end":6526,"line_start":203,"line_end":203,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":6531,"byte_end":6534,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ A word is defined as:","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":6539,"byte_end":6564,"line_start":205,"line_end":205,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":6569,"byte_end":6572,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ `word = atom / quoted-string`","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":6577,"byte_end":6610,"line_start":207,"line_end":207,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":6615,"byte_end":6618,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ If `allow_dot_atom` is true, then `atom` can be a `dot-atom` in this phrase.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":6623,"byte_end":6703,"line_start":209,"line_end":209,"column_start":5,"column_end":85}},{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":6708,"byte_end":6722,"line_start":210,"line_end":210,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":7296,"byte_end":7310,"line_start":230,"line_end":230,"column_start":12,"column_end":26},"name":"consume_phrase","qualname":"<Rfc5322Parser>::consume_phrase","value":"pub fn consume_phrase(&mut Self, bool) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Consume a phrase from the input.","sig":null,"attributes":[{"value":"/ Consume a phrase from the input.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":7062,"byte_end":7098,"line_start":222,"line_end":222,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":7103,"byte_end":7106,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ A phrase is defined as:","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":7111,"byte_end":7138,"line_start":224,"line_end":224,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":7143,"byte_end":7146,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ `phrase = 1*word`","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":7151,"byte_end":7172,"line_start":226,"line_end":226,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":7177,"byte_end":7180,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ If `allow_dot_atom` is true, then `atom` can be a `dot-atom` in this phrase.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":7185,"byte_end":7265,"line_start":228,"line_end":228,"column_start":5,"column_end":85}},{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":7270,"byte_end":7284,"line_start":229,"line_end":229,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":8585,"byte_end":8606,"line_start":270,"line_end":270,"column_start":12,"column_end":33},"name":"consume_quoted_string","qualname":"<Rfc5322Parser>::consume_quoted_string","value":"pub fn consume_quoted_string(&mut Self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Consume a quoted string from the input\n [unstable]\n","sig":null,"attributes":[{"value":"/ Consume a quoted string from the input","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":8512,"byte_end":8554,"line_start":268,"line_end":268,"column_start":5,"column_end":47}},{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":8559,"byte_end":8573,"line_start":269,"line_end":269,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":10683,"byte_end":10695,"line_start":323,"line_end":323,"column_start":12,"column_end":24},"name":"consume_atom","qualname":"<Rfc5322Parser>::consume_atom","value":"pub fn consume_atom(&mut Self, bool) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Consume an atom from the input.","sig":null,"attributes":[{"value":"/ Consume an atom from the input.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":10509,"byte_end":10544,"line_start":318,"line_end":318,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":10549,"byte_end":10552,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ If `allow_dot` is true, then also allow '.' to be considered as an","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":10557,"byte_end":10627,"line_start":320,"line_end":320,"column_start":5,"column_end":75}},{"value":"/ atext character.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":10632,"byte_end":10652,"line_start":321,"line_end":321,"column_start":5,"column_end":25}},{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":10657,"byte_end":10671,"line_start":322,"line_end":322,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":11017,"byte_end":11042,"line_start":335,"line_end":335,"column_start":12,"column_end":37},"name":"consume_linear_whitespace","qualname":"<Rfc5322Parser>::consume_linear_whitespace","value":"pub fn consume_linear_whitespace(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Consume LWSP (Linear whitespace)\n [unstable]\n","sig":null,"attributes":[{"value":"/ Consume LWSP (Linear whitespace)","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":10950,"byte_end":10986,"line_start":333,"line_end":333,"column_start":5,"column_end":41}},{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":10991,"byte_end":11005,"line_start":334,"line_end":334,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":11217,"byte_end":11229,"line_start":342,"line_end":342,"column_start":12,"column_end":24},"name":"consume_char","qualname":"<Rfc5322Parser>::consume_char","value":"pub fn consume_char(&mut Self) -> Option<char>","parent":null,"children":[],"decl_id":null,"docs":" Consume a single character from the input.\n [unstable]\n","sig":null,"attributes":[{"value":"/ Consume a single character from the input.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":11126,"byte_end":11172,"line_start":339,"line_end":339,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":11177,"byte_end":11186,"line_start":340,"line_end":340,"column_start":5,"column_end":14}},{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":11191,"byte_end":11205,"line_start":341,"line_end":341,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":11476,"byte_end":11493,"line_start":353,"line_end":353,"column_start":12,"column_end":29},"name":"consume_linebreak","qualname":"<Rfc5322Parser>::consume_linebreak","value":"pub fn consume_linebreak(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" [unstable]\n","sig":null,"attributes":[{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":11450,"byte_end":11464,"line_start":352,"line_end":352,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":12103,"byte_end":12117,"line_start":375,"line_end":375,"column_start":12,"column_end":26},"name":"peek_linebreak","qualname":"<Rfc5322Parser>::peek_linebreak","value":"pub fn peek_linebreak(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" [unstable]\n","sig":null,"attributes":[{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":12077,"byte_end":12091,"line_start":374,"line_end":374,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":12617,"byte_end":12630,"line_start":391,"line_end":391,"column_start":12,"column_end":25},"name":"consume_while","qualname":"<Rfc5322Parser>::consume_while","value":"pub fn consume_while<F: Fn(char) -> bool>(&mut Self, F) -> String","parent":null,"children":[],"decl_id":null,"docs":" Consume a set of characters, each passed to `test` until this function\n returns false.","sig":null,"attributes":[{"value":"/ Consume a set of characters, each passed to `test` until this function","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":12244,"byte_end":12318,"line_start":382,"line_end":382,"column_start":5,"column_end":79}},{"value":"/ returns false.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":12323,"byte_end":12341,"line_start":383,"line_end":383,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":12346,"byte_end":12349,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ The position after calling this function will be pointing to the character","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":12354,"byte_end":12432,"line_start":385,"line_end":385,"column_start":5,"column_end":83}},{"value":"/ which caused a false result from `test`.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":12437,"byte_end":12481,"line_start":386,"line_end":386,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":12486,"byte_end":12489,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ Returns the string of characters that returned true for the test function.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":12494,"byte_end":12572,"line_start":388,"line_end":388,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":12577,"byte_end":12586,"line_start":389,"line_end":389,"column_start":5,"column_end":14}},{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":12591,"byte_end":12605,"line_start":390,"line_end":390,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":13012,"byte_end":13016,"line_start":404,"line_end":404,"column_start":12,"column_end":16},"name":"peek","qualname":"<Rfc5322Parser>::peek","value":"pub fn peek(&Self) -> char","parent":null,"children":[],"decl_id":null,"docs":" Peek at the current character.","sig":null,"attributes":[{"value":"/ Peek at the current character.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":12869,"byte_end":12903,"line_start":399,"line_end":399,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":12908,"byte_end":12911,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ Note that this does not do any bounds checking.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":12916,"byte_end":12967,"line_start":401,"line_end":401,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":12972,"byte_end":12981,"line_start":402,"line_end":402,"column_start":5,"column_end":14}},{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":12986,"byte_end":13000,"line_start":403,"line_end":403,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":13189,"byte_end":13200,"line_start":411,"line_end":411,"column_start":12,"column_end":23},"name":"assert_char","qualname":"<Rfc5322Parser>::assert_char","value":"pub fn assert_char(&Self, char) -> ParsingResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Check that `!self.eof() && self.peek() == c`\n [unstable]\n","sig":null,"attributes":[{"value":"/ Check that `!self.eof() && self.peek() == c`","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":13096,"byte_end":13144,"line_start":408,"line_end":408,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":13149,"byte_end":13158,"line_start":409,"line_end":409,"column_start":5,"column_end":14}},{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":13163,"byte_end":13177,"line_start":410,"line_end":410,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":13579,"byte_end":13593,"line_start":425,"line_end":425,"column_start":12,"column_end":26},"name":"assert_not_eof","qualname":"<Rfc5322Parser>::assert_not_eof","value":"pub fn assert_not_eof(&Self) -> ParsingResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Check that we have not reached the end of the input.\n [unstable]\n","sig":null,"attributes":[{"value":"/ Check that we have not reached the end of the input.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":13478,"byte_end":13534,"line_start":422,"line_end":422,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":13539,"byte_end":13548,"line_start":423,"line_end":423,"column_start":5,"column_end":14}},{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":13553,"byte_end":13567,"line_start":424,"line_end":424,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":13887,"byte_end":13898,"line_start":436,"line_end":436,"column_start":12,"column_end":23},"name":"peek_to_end","qualname":"<Rfc5322Parser>::peek_to_end","value":"pub fn peek_to_end(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Get the unconsumed string. Should only be used for debugging purposes!\n [unstable]\n","sig":null,"attributes":[{"value":"/ Get the unconsumed string. Should only be used for debugging purposes!","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":13768,"byte_end":13842,"line_start":433,"line_end":433,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":13847,"byte_end":13856,"line_start":434,"line_end":434,"column_start":5,"column_end":14}},{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":13861,"byte_end":13875,"line_start":435,"line_end":435,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":14057,"byte_end":14060,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"eof","qualname":"<Rfc5322Parser>::eof","value":"pub fn eof(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if we have reached the end of the input.\n [unstable]\n","sig":null,"attributes":[{"value":"/ Returns true if we have reached the end of the input.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":13955,"byte_end":14012,"line_start":440,"line_end":440,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":14017,"byte_end":14026,"line_start":441,"line_end":441,"column_start":5,"column_end":14}},{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":14031,"byte_end":14045,"line_start":442,"line_end":442,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":72},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":14176,"byte_end":14190,"line_start":450,"line_end":450,"column_start":12,"column_end":26},"name":"Rfc5322Builder","qualname":"::rfc5322::Rfc5322Builder","value":"Rfc5322Builder {  }","parent":null,"children":[{"krate":0,"index":73}],"decl_id":null,"docs":" Type for constructing RFC 5322 messages\n","sig":null,"attributes":[{"value":"/ Type for constructing RFC 5322 messages","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":14121,"byte_end":14164,"line_start":449,"line_end":449,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":14297,"byte_end":14300,"line_start":456,"line_end":456,"column_start":12,"column_end":15},"name":"new","qualname":"<Rfc5322Builder>::new","value":"pub fn new() -> Rfc5322Builder","parent":null,"children":[],"decl_id":null,"docs":" Make a new builder, with an empty string\n","sig":null,"attributes":[{"value":"/ Make a new builder, with an empty string","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":14241,"byte_end":14285,"line_start":455,"line_end":455,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":14412,"byte_end":14418,"line_start":462,"line_end":462,"column_start":12,"column_end":18},"name":"result","qualname":"<Rfc5322Builder>::result","value":"pub fn result(&Self) -> &String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":14478,"byte_end":14486,"line_start":466,"line_end":466,"column_start":12,"column_end":20},"name":"emit_raw","qualname":"<Rfc5322Builder>::emit_raw","value":"pub fn emit_raw(&mut Self, &str)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":14560,"byte_end":14571,"line_start":470,"line_end":470,"column_start":12,"column_end":23},"name":"emit_folded","qualname":"<Rfc5322Builder>::emit_folded","value":"pub fn emit_folded(&mut Self, &str)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":79},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc2047.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rfc2047","qualname":"::rfc2047","value":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc2047.rs","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86}],"decl_id":null,"docs":" Module for decoding RFC 2047 strings\n","sig":null,"attributes":[{"value":"! Module for decoding RFC 2047 strings","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc2047.rs","byte_start":22593,"byte_end":22633,"line_start":1,"line_end":1,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":84},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc2047.rs","byte_start":22958,"byte_end":22972,"line_start":14,"line_end":14,"column_start":8,"column_end":22},"name":"decode_rfc2047","qualname":"::rfc2047::decode_rfc2047","value":"pub fn decode_rfc2047(&str) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Decode an RFC 2047 string (`s`) into a Rust String.","sig":null,"attributes":[{"value":"/ Decode an RFC 2047 string (`s`) into a Rust String.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc2047.rs","byte_start":22788,"byte_end":22843,"line_start":9,"line_end":9,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc2047.rs","byte_start":22844,"byte_end":22847,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Will accept either \"Q\" encoding (RFC 2047 Section 4.2) or","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc2047.rs","byte_start":22848,"byte_end":22909,"line_start":11,"line_end":11,"column_start":1,"column_end":62}},{"value":"/ \"B\" encoding (BASE64)","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc2047.rs","byte_start":22910,"byte_end":22935,"line_start":12,"line_end":12,"column_start":1,"column_end":26}},{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc2047.rs","byte_start":22936,"byte_end":22950,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":85},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc2047.rs","byte_start":23860,"byte_end":23877,"line_start":42,"line_end":42,"column_start":8,"column_end":25},"name":"decode_q_encoding","qualname":"::rfc2047::decode_q_encoding","value":"pub fn decode_q_encoding(&str) -> Result<Vec<u8>, String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":87},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc2045.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rfc2045","qualname":"::rfc2045","value":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc2045.rs","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":93}],"decl_id":null,"docs":" Module for dealing with RFC2045 style headers.\n","sig":null,"attributes":[{"value":"! Module for dealing with RFC2045 style headers.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc2045.rs","byte_start":27331,"byte_end":27381,"line_start":1,"line_end":1,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":90},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc2045.rs","byte_start":27563,"byte_end":27576,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"Rfc2045Parser","qualname":"::rfc2045::Rfc2045Parser","value":"Rfc2045Parser {  }","parent":null,"children":[{"krate":0,"index":92}],"decl_id":null,"docs":" Parser over RFC 2045 style headers.","sig":null,"attributes":[{"value":"/ Parser over RFC 2045 style headers.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc2045.rs","byte_start":27450,"byte_end":27489,"line_start":6,"line_end":6,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc2045.rs","byte_start":27490,"byte_end":27493,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Things of the style `value; param1=foo; param2=\"bar\"`","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc2045.rs","byte_start":27494,"byte_end":27551,"line_start":8,"line_end":8,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc2045.rs","byte_start":27694,"byte_end":27697,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"new","qualname":"<Rfc2045Parser>::new","value":"pub fn new(&str) -> Rfc2045Parser","parent":null,"children":[],"decl_id":null,"docs":" Create a new parser over `s`\n","sig":null,"attributes":[{"value":"/ Create a new parser over `s`","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc2045.rs","byte_start":27650,"byte_end":27682,"line_start":14,"line_end":14,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc2045.rs","byte_start":28416,"byte_end":28427,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"name":"consume_all","qualname":"<Rfc2045Parser>::consume_all","value":"pub fn consume_all(&mut Self) -> (String, HashMap<String, String>)","parent":null,"children":[],"decl_id":null,"docs":" Consume up to all of the input into the value and a hashmap\n over parameters to values.\n","sig":null,"attributes":[{"value":"/ Consume up to all of the input into the value and a hashmap","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc2045.rs","byte_start":28306,"byte_end":28369,"line_start":39,"line_end":39,"column_start":5,"column_end":68}},{"value":"/ over parameters to values.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc2045.rs","byte_start":28374,"byte_end":28404,"line_start":40,"line_end":40,"column_start":5,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":100},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc822.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rfc822","qualname":"::rfc822","value":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc822.rs","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":113},{"krate":0,"index":327},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":335},{"krate":0,"index":115},{"krate":0,"index":118}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":115},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc822.rs","byte_start":32527,"byte_end":32543,"line_start":48,"line_end":48,"column_start":12,"column_end":28},"name":"Rfc822DateParser","qualname":"::rfc822::Rfc822DateParser","value":"Rfc822DateParser {  }","parent":null,"children":[{"krate":0,"index":117}],"decl_id":null,"docs":" Parser for RFC822 style dates, as defined by Section 5.","sig":null,"attributes":[{"value":"/ Parser for RFC822 style dates, as defined by Section 5.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc822.rs","byte_start":32311,"byte_end":32370,"line_start":43,"line_end":43,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc822.rs","byte_start":32371,"byte_end":32374,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Note that this also supports the additions as specified in","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc822.rs","byte_start":32375,"byte_end":32437,"line_start":45,"line_end":45,"column_start":1,"column_end":63}},{"value":"/ RFC5322 Section 3.3 while still being backward compatible.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc822.rs","byte_start":32438,"byte_end":32500,"line_start":46,"line_end":46,"column_start":1,"column_end":63}},{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc822.rs","byte_start":32501,"byte_end":32515,"line_start":47,"line_end":47,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc822.rs","byte_start":32646,"byte_end":32649,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"new","qualname":"<Rfc822DateParser>::new","value":"pub fn new(&'s str) -> Rfc822DateParser","parent":null,"children":[],"decl_id":null,"docs":" [unstable]\n","sig":null,"attributes":[{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc822.rs","byte_start":32620,"byte_end":32634,"line_start":53,"line_end":53,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc822.rs","byte_start":35957,"byte_end":35973,"line_start":151,"line_end":151,"column_start":12,"column_end":28},"name":"consume_datetime","qualname":"<Rfc822DateParser>::consume_datetime","value":"pub fn consume_datetime(&mut Self) -> ParsingResult<DateTime<FixedOffset>>","parent":null,"children":[],"decl_id":null,"docs":" Consume a DateTime from the input.","sig":null,"attributes":[{"value":"/ Consume a DateTime from the input.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc822.rs","byte_start":35262,"byte_end":35300,"line_start":129,"line_end":129,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc822.rs","byte_start":35305,"byte_end":35308,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ If successful, returns a DateTime with a fixed offset based on the","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc822.rs","byte_start":35313,"byte_end":35383,"line_start":131,"line_end":131,"column_start":5,"column_end":75}},{"value":"/ timezone parsed. You may wish to deal with this in UTC, in which case","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc822.rs","byte_start":35388,"byte_end":35461,"line_start":132,"line_end":132,"column_start":5,"column_end":78}},{"value":"/ you may want something like","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc822.rs","byte_start":35466,"byte_end":35497,"line_start":133,"line_end":133,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc822.rs","byte_start":35502,"byte_end":35505,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc822.rs","byte_start":35510,"byte_end":35517,"line_start":135,"line_end":135,"column_start":5,"column_end":12}},{"value":"/ extern crate chrono;","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc822.rs","byte_start":35522,"byte_end":35546,"line_start":136,"line_end":136,"column_start":5,"column_end":29}},{"value":"/ extern crate email;","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc822.rs","byte_start":35551,"byte_end":35574,"line_start":137,"line_end":137,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc822.rs","byte_start":35579,"byte_end":35582,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ use email::rfc822::Rfc822DateParser;","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc822.rs","byte_start":35587,"byte_end":35627,"line_start":139,"line_end":139,"column_start":5,"column_end":45}},{"value":"/ use chrono::Utc;","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc822.rs","byte_start":35632,"byte_end":35652,"line_start":140,"line_end":140,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc822.rs","byte_start":35657,"byte_end":35660,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc822.rs","byte_start":35665,"byte_end":35680,"line_start":142,"line_end":142,"column_start":5,"column_end":20}},{"value":"/     let mut p = Rfc822DateParser::new(\"Thu, 18 Dec 2014 21:07:22 +0100\");","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc822.rs","byte_start":35685,"byte_end":35762,"line_start":143,"line_end":143,"column_start":5,"column_end":82}},{"value":"/     let d = p.consume_datetime().unwrap();","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc822.rs","byte_start":35767,"byte_end":35813,"line_start":144,"line_end":144,"column_start":5,"column_end":51}},{"value":"/     let as_utc = d.with_timezone(&Utc);","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc822.rs","byte_start":35818,"byte_end":35861,"line_start":145,"line_end":145,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc822.rs","byte_start":35866,"byte_end":35869,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(d, as_utc);","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc822.rs","byte_start":35874,"byte_end":35904,"line_start":147,"line_end":147,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc822.rs","byte_start":35909,"byte_end":35914,"line_start":148,"line_end":148,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc822.rs","byte_start":35919,"byte_end":35926,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc822.rs","byte_start":35931,"byte_end":35945,"line_start":150,"line_end":150,"column_start":5,"column_end":19}}]},{"kind":"Mod","id":{"krate":0,"index":127},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/mimeheaders.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mimeheaders","qualname":"::mimeheaders","value":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/mimeheaders.rs","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":143},{"krate":0,"index":145},{"krate":0,"index":338},{"krate":0,"index":354},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":346},{"krate":0,"index":345},{"krate":0,"index":147},{"krate":0,"index":149}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":139},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/mimeheaders.rs","byte_start":41964,"byte_end":41979,"line_start":15,"line_end":15,"column_start":10,"column_end":25},"name":"MimeContentType","qualname":"::mimeheaders::MimeContentType","value":"(String, String)","parent":null,"children":[],"decl_id":null,"docs":" Content-Type string, major/minor as the first and second elements\n respectively.\n","sig":null,"attributes":[{"value":"/ Content-Type string, major/minor as the first and second elements","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/mimeheaders.rs","byte_start":41867,"byte_end":41936,"line_start":13,"line_end":13,"column_start":1,"column_end":70}},{"value":"/ respectively.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/mimeheaders.rs","byte_start":41937,"byte_end":41954,"line_start":14,"line_end":14,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":140},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/mimeheaders.rs","byte_start":42065,"byte_end":42086,"line_start":18,"line_end":18,"column_start":12,"column_end":33},"name":"MimeContentTypeHeader","qualname":"::mimeheaders::MimeContentTypeHeader","value":"MimeContentTypeHeader { content_type, params }","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142}],"decl_id":null,"docs":" Special header type for the Content-Type header.\n","sig":null,"attributes":[{"value":"/ Special header type for the Content-Type header.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/mimeheaders.rs","byte_start":42001,"byte_end":42053,"line_start":17,"line_end":17,"column_start":1,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":141},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/mimeheaders.rs","byte_start":42147,"byte_end":42159,"line_start":20,"line_end":20,"column_start":9,"column_end":21},"name":"content_type","qualname":"::mimeheaders::MimeContentTypeHeader::content_type","value":"(std::string::String, std::string::String)","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" The content type presented by this header\n","sig":null,"attributes":[{"value":"/ The content type presented by this header","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/mimeheaders.rs","byte_start":42093,"byte_end":42138,"line_start":19,"line_end":19,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":142},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/mimeheaders.rs","byte_start":42220,"byte_end":42226,"line_start":22,"line_end":22,"column_start":9,"column_end":15},"name":"params","qualname":"::mimeheaders::MimeContentTypeHeader::params","value":"std::collections::HashMap<std::string::String, std::string::String>","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Parameters of this header\n","sig":null,"attributes":[{"value":"/ Parameters of this header","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/mimeheaders.rs","byte_start":42182,"byte_end":42211,"line_start":21,"line_end":21,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":339},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/mimeheaders.rs","byte_start":43466,"byte_end":43474,"line_start":58,"line_end":58,"column_start":5,"column_end":13},"name":"Identity","qualname":"::mimeheaders::MimeContentTransferEncoding::Identity","value":"MimeContentTransferEncoding::Identity","parent":{"krate":0,"index":338},"children":[],"decl_id":null,"docs":" Message content is not encoded in any way.\n","sig":null,"attributes":[{"value":"/ Message content is not encoded in any way.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/mimeheaders.rs","byte_start":43415,"byte_end":43461,"line_start":57,"line_end":57,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":341},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/mimeheaders.rs","byte_start":43609,"byte_end":43624,"line_start":62,"line_end":62,"column_start":5,"column_end":20},"name":"QuotedPrintable","qualname":"::mimeheaders::MimeContentTransferEncoding::QuotedPrintable","value":"MimeContentTransferEncoding::QuotedPrintable","parent":{"krate":0,"index":338},"children":[],"decl_id":null,"docs":" Content transfered using the quoted-printable encoding.","sig":null,"attributes":[{"value":"/ Content transfered using the quoted-printable encoding.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/mimeheaders.rs","byte_start":43480,"byte_end":43539,"line_start":59,"line_end":59,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/mimeheaders.rs","byte_start":43544,"byte_end":43547,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ This encoding is defined in RFC 2045 Section 6.7","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/mimeheaders.rs","byte_start":43552,"byte_end":43604,"line_start":61,"line_end":61,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":343},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/mimeheaders.rs","byte_start":43732,"byte_end":43738,"line_start":66,"line_end":66,"column_start":5,"column_end":11},"name":"Base64","qualname":"::mimeheaders::MimeContentTransferEncoding::Base64","value":"MimeContentTransferEncoding::Base64","parent":{"krate":0,"index":338},"children":[],"decl_id":null,"docs":" Content transfered as BASE64","sig":null,"attributes":[{"value":"/ Content transfered as BASE64","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/mimeheaders.rs","byte_start":43630,"byte_end":43662,"line_start":63,"line_end":63,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/mimeheaders.rs","byte_start":43667,"byte_end":43670,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ This encoding is defined in RFC 2045 Section 6.8","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/mimeheaders.rs","byte_start":43675,"byte_end":43727,"line_start":65,"line_end":65,"column_start":5,"column_end":57}}]},{"kind":"Enum","id":{"krate":0,"index":338},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/mimeheaders.rs","byte_start":43381,"byte_end":43408,"line_start":56,"line_end":56,"column_start":10,"column_end":37},"name":"MimeContentTransferEncoding","qualname":"::mimeheaders::MimeContentTransferEncoding","value":"pub enum MimeContentTransferEncoding {\n\n    /// Message content is not encoded in any way.\n    Identity,\n\n    /// Content transfered using the quoted-printable encoding.\n    ///\n    /// This encoding is defined in RFC 2045 Section 6.7\n    QuotedPrintable,\n\n    /// Content transfered as BASE64\n    ///\n    /// This encoding is defined in RFC 2045 Section 6.8\n    Base64,\n}","parent":null,"children":[{"krate":0,"index":339},{"krate":0,"index":341},{"krate":0,"index":343}],"decl_id":null,"docs":" Special header type for the Content-Transfer-Encoding header.\n","sig":null,"attributes":[{"value":"/ Special header type for the Content-Transfer-Encoding header.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/mimeheaders.rs","byte_start":43265,"byte_end":43330,"line_start":54,"line_end":54,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/mimeheaders.rs","byte_start":44000,"byte_end":44006,"line_start":75,"line_end":75,"column_start":12,"column_end":18},"name":"decode","qualname":"<MimeContentTransferEncoding>::decode","value":"pub fn decode(&Self, &String) -> Option<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Decode the input string with this transfer encoding.","sig":null,"attributes":[{"value":"/ Decode the input string with this transfer encoding.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/mimeheaders.rs","byte_start":43782,"byte_end":43838,"line_start":70,"line_end":70,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/mimeheaders.rs","byte_start":43843,"byte_end":43846,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ Note that this will return a clone of the input's bytes if the","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/mimeheaders.rs","byte_start":43851,"byte_end":43917,"line_start":72,"line_end":72,"column_start":5,"column_end":71}},{"value":"/ transfer encoding is the Identity encoding.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/mimeheaders.rs","byte_start":43922,"byte_end":43969,"line_start":73,"line_end":73,"column_start":5,"column_end":52}},{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/mimeheaders.rs","byte_start":43974,"byte_end":43988,"line_start":74,"line_end":74,"column_start":5,"column_end":19}}]},{"kind":"Mod","id":{"krate":0,"index":151},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/results.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"results","qualname":"::results","value":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/results.rs","parent":null,"children":[{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":356},{"krate":0,"index":358},{"krate":0,"index":154},{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":161}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":356},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/results.rs","byte_start":50371,"byte_end":50383,"line_start":5,"line_end":5,"column_start":12,"column_end":24},"name":"ParsingError","qualname":"::results::ParsingError","value":"ParsingError {  }","parent":null,"children":[{"krate":0,"index":357}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/results.rs","byte_start":50756,"byte_end":50759,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"name":"new","qualname":"<ParsingError>::new","value":"pub fn new(String) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":161},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/results.rs","byte_start":50858,"byte_end":50871,"line_start":33,"line_end":33,"column_start":10,"column_end":23},"name":"ParsingResult","qualname":"::results::ParsingResult","value":"Result<T, ParsingError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":179},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":51328,"byte_end":51338,"line_start":20,"line_end":20,"column_start":11,"column_end":21},"name":"FromHeader","qualname":"::header::FromHeader","value":"FromHeader: Sized","parent":null,"children":[{"krate":0,"index":180}],"decl_id":null,"docs":" Trait for converting from RFC822 Header values into\n Rust types.\n","sig":null,"attributes":[{"value":"/ Trait for converting from RFC822 Header values into","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":51246,"byte_end":51301,"line_start":18,"line_end":18,"column_start":1,"column_end":56}},{"value":"/ Rust types.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":51302,"byte_end":51317,"line_start":19,"line_end":19,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":51458,"byte_end":51469,"line_start":24,"line_end":24,"column_start":8,"column_end":19},"name":"from_header","qualname":"::header::FromHeader::from_header","value":"pub fn from_header(String) -> ParsingResult<Self>","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":" Parse the `value` of the header.","sig":null,"attributes":[{"value":"/ Parse the `value` of the header.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":51352,"byte_end":51388,"line_start":21,"line_end":21,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":51393,"byte_end":51396,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ Returns None if the value failed to be parsed","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":51401,"byte_end":51450,"line_start":23,"line_end":23,"column_start":5,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":181},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":51585,"byte_end":51593,"line_start":28,"line_end":28,"column_start":11,"column_end":19},"name":"ToHeader","qualname":"::header::ToHeader","value":"ToHeader","parent":null,"children":[{"krate":0,"index":182}],"decl_id":null,"docs":" Trait for converting from a Rust type into a Header value.\n","sig":null,"attributes":[{"value":"/ Trait for converting from a Rust type into a Header value.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":51512,"byte_end":51574,"line_start":27,"line_end":27,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":51760,"byte_end":51769,"line_start":33,"line_end":33,"column_start":8,"column_end":17},"name":"to_header","qualname":"::header::ToHeader::to_header","value":"pub fn to_header(Self) -> ParsingResult<String>","parent":{"krate":0,"index":181},"children":[],"decl_id":null,"docs":" Turn the `value` into a String suitable for being used in\n a message header.","sig":null,"attributes":[{"value":"/ Turn the `value` into a String suitable for being used in","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":51600,"byte_end":51661,"line_start":29,"line_end":29,"column_start":5,"column_end":66}},{"value":"/ a message header.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":51666,"byte_end":51687,"line_start":30,"line_end":30,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":51692,"byte_end":51695,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Returns None if the value cannot be stringified.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":51700,"byte_end":51752,"line_start":32,"line_end":32,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":183},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":52155,"byte_end":52169,"line_start":44,"line_end":44,"column_start":11,"column_end":25},"name":"ToFoldedHeader","qualname":"::header::ToFoldedHeader","value":"ToFoldedHeader","parent":null,"children":[{"krate":0,"index":184}],"decl_id":null,"docs":" Trait for converting from a Rust time into a Header value\n that handles its own folding.","sig":null,"attributes":[{"value":"/ Trait for converting from a Rust time into a Header value","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":51812,"byte_end":51873,"line_start":36,"line_end":36,"column_start":1,"column_end":62}},{"value":"/ that handles its own folding.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":51874,"byte_end":51907,"line_start":37,"line_end":37,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":51908,"byte_end":51911,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Be mindful that this trait does not mean that the value will","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":51912,"byte_end":51976,"line_start":39,"line_end":39,"column_start":1,"column_end":65}},{"value":"/ not be folded later, rather that the type returns a value that","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":51977,"byte_end":52043,"line_start":40,"line_end":40,"column_start":1,"column_end":67}},{"value":"/ should not be folded, given that the header value starts so far","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":52044,"byte_end":52111,"line_start":41,"line_end":41,"column_start":1,"column_end":68}},{"value":"/ in to a line.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":52112,"byte_end":52129,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":52130,"byte_end":52144,"line_start":43,"line_end":43,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":52179,"byte_end":52195,"line_start":45,"line_end":45,"column_start":8,"column_end":24},"name":"to_folded_header","qualname":"::header::ToFoldedHeader::to_folded_header","value":"pub fn to_folded_header(usize, Self) -> ParsingResult<String>","parent":{"krate":0,"index":183},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":376},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":56140,"byte_end":56146,"line_start":155,"line_end":155,"column_start":12,"column_end":18},"name":"Header","qualname":"::header::Header","value":"Header { name }","parent":null,"children":[{"krate":0,"index":377},{"krate":0,"index":378}],"decl_id":null,"docs":" Represents an RFC 822 Header\n [unstable]\n","sig":null,"attributes":[{"value":"/ Represents an RFC 822 Header","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":56036,"byte_end":56068,"line_start":152,"line_end":152,"column_start":1,"column_end":33}},{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":56069,"byte_end":56083,"line_start":153,"line_end":153,"column_start":1,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":377},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":56189,"byte_end":56193,"line_start":157,"line_end":157,"column_start":9,"column_end":13},"name":"name","qualname":"::header::Header::name","value":"std::string::String","parent":{"krate":0,"index":376},"children":[],"decl_id":null,"docs":" The name of this header\n","sig":null,"attributes":[{"value":"/ The name of this header","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":56153,"byte_end":56180,"line_start":156,"line_end":156,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":56526,"byte_end":56529,"line_start":171,"line_end":171,"column_start":12,"column_end":15},"name":"new","qualname":"<Header>::new","value":"pub fn new(String, String) -> Header","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Header for the given `name` and `value`\n [unstable]\n","sig":null,"attributes":[{"value":"/ Creates a new Header for the given `name` and `value`","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":56438,"byte_end":56495,"line_start":169,"line_end":169,"column_start":5,"column_end":62}},{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":56500,"byte_end":56514,"line_start":170,"line_end":170,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":56885,"byte_end":56899,"line_start":183,"line_end":183,"column_start":12,"column_end":26},"name":"new_with_value","qualname":"<Header>::new_with_value","value":"pub fn new_with_value<T: ToFoldedHeader>(String, T) -> ParsingResult<Header>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Header for the given `name` and `value`,\n as converted through the `ToHeader` or `ToFoldedHeader` trait.","sig":null,"attributes":[{"value":"/ Creates a new Header for the given `name` and `value`,","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":56659,"byte_end":56717,"line_start":178,"line_end":178,"column_start":5,"column_end":63}},{"value":"/ as converted through the `ToHeader` or `ToFoldedHeader` trait.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":56722,"byte_end":56788,"line_start":179,"line_end":179,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":56793,"byte_end":56796,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Returns None if the value failed to be converted.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":56801,"byte_end":56854,"line_start":181,"line_end":181,"column_start":5,"column_end":58}},{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":56859,"byte_end":56873,"line_start":182,"line_end":182,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":57246,"byte_end":57255,"line_start":191,"line_end":191,"column_start":12,"column_end":21},"name":"get_value","qualname":"<Header>::get_value","value":"pub fn get_value<T: FromHeader>(&Self) -> ParsingResult<T>","parent":null,"children":[],"decl_id":null,"docs":" Get the value represented by this header, as parsed\n into whichever type `T`\n [unstable]\n","sig":null,"attributes":[{"value":"/ Get the value represented by this header, as parsed","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":57128,"byte_end":57183,"line_start":188,"line_end":188,"column_start":5,"column_end":60}},{"value":"/ into whichever type `T`","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":57188,"byte_end":57215,"line_start":189,"line_end":189,"column_start":5,"column_end":32}},{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":57220,"byte_end":57234,"line_start":190,"line_end":190,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":213},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":57541,"byte_end":57551,"line_start":203,"line_end":203,"column_start":12,"column_end":22},"name":"HeaderIter","qualname":"::header::HeaderIter","value":"HeaderIter {  }","parent":null,"children":[{"krate":0,"index":215}],"decl_id":null,"docs":" [unstable]\n","sig":null,"attributes":[{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":57515,"byte_end":57529,"line_start":202,"line_end":202,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":393},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":58094,"byte_end":58103,"line_start":230,"line_end":230,"column_start":12,"column_end":21},"name":"HeaderMap","qualname":"::header::HeaderMap","value":"HeaderMap {  }","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395}],"decl_id":null,"docs":" A collection of Headers\n [unstable]\n","sig":null,"attributes":[{"value":"/ A collection of Headers","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":58004,"byte_end":58031,"line_start":227,"line_end":227,"column_start":1,"column_end":28}},{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":58032,"byte_end":58046,"line_start":228,"line_end":228,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":58556,"byte_end":58559,"line_start":245,"line_end":245,"column_start":12,"column_end":15},"name":"new","qualname":"<HeaderMap>::new","value":"pub fn new() -> HeaderMap","parent":null,"children":[],"decl_id":null,"docs":" [unstable]\n","sig":null,"attributes":[{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":58530,"byte_end":58544,"line_start":244,"line_end":244,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":58762,"byte_end":58768,"line_start":254,"line_end":254,"column_start":12,"column_end":18},"name":"insert","qualname":"<HeaderMap>::insert","value":"pub fn insert(&mut Self, Header)","parent":null,"children":[],"decl_id":null,"docs":" Adds a header to the collection\n [unstable]\n","sig":null,"attributes":[{"value":"/ Adds a header to the collection","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":58696,"byte_end":58731,"line_start":252,"line_end":252,"column_start":5,"column_end":40}},{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":58736,"byte_end":58750,"line_start":253,"line_end":253,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":59628,"byte_end":59632,"line_start":277,"line_end":277,"column_start":12,"column_end":16},"name":"iter","qualname":"<HeaderMap>::iter","value":"pub fn iter(&Self) -> HeaderIter","parent":null,"children":[],"decl_id":null,"docs":" Get an Iterator over the collection of headers.\n [unstable]\n","sig":null,"attributes":[{"value":"/ Get an Iterator over the collection of headers.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":59546,"byte_end":59597,"line_start":275,"line_end":275,"column_start":5,"column_end":56}},{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":59602,"byte_end":59616,"line_start":276,"line_end":276,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":59799,"byte_end":59802,"line_start":283,"line_end":283,"column_start":12,"column_end":15},"name":"get","qualname":"<HeaderMap>::get","value":"pub fn get(&Self, String) -> Option<&Header>","parent":null,"children":[],"decl_id":null,"docs":" Get the last value of the header with `name`\n [unstable]\n","sig":null,"attributes":[{"value":"/ Get the last value of the header with `name`","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":59720,"byte_end":59768,"line_start":281,"line_end":281,"column_start":5,"column_end":53}},{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":59773,"byte_end":59787,"line_start":282,"line_end":282,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":60087,"byte_end":60096,"line_start":290,"line_end":290,"column_start":12,"column_end":21},"name":"get_value","qualname":"<HeaderMap>::get_value","value":"pub fn get_value<T: FromHeader>(&Self, String) -> ParsingResult<T>","parent":null,"children":[],"decl_id":null,"docs":" Get the last value of the header with `name`, as a decoded type.\n [unstable]\n","sig":null,"attributes":[{"value":"/ Get the last value of the header with `name`, as a decoded type.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":59988,"byte_end":60056,"line_start":288,"line_end":288,"column_start":5,"column_end":73}},{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":60061,"byte_end":60075,"line_start":289,"line_end":289,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":60423,"byte_end":60426,"line_start":299,"line_end":299,"column_start":12,"column_end":15},"name":"len","qualname":"<HeaderMap>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" [unstable]\n Get the number of headers within this map.\n","sig":null,"attributes":[{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":60346,"byte_end":60360,"line_start":297,"line_end":297,"column_start":5,"column_end":19}},{"value":"/ Get the number of headers within this map.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":60365,"byte_end":60411,"line_start":298,"line_end":298,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":60614,"byte_end":60618,"line_start":306,"line_end":306,"column_start":12,"column_end":16},"name":"find","qualname":"<HeaderMap>::find","value":"pub fn find(&Self, &String) -> Option<Vec<&Header>>","parent":null,"children":[],"decl_id":null,"docs":" [unstable]\n Find a list of headers of `name`, `None` if there\n are no headers with that name.\n","sig":null,"attributes":[{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":60491,"byte_end":60505,"line_start":303,"line_end":303,"column_start":5,"column_end":19}},{"value":"/ Find a list of headers of `name`, `None` if there","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":60510,"byte_end":60563,"line_start":304,"line_end":304,"column_start":5,"column_end":58}},{"value":"/ are no headers with that name.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":60568,"byte_end":60602,"line_start":305,"line_end":305,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":408},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":65151,"byte_end":65158,"line_start":13,"line_end":13,"column_start":5,"column_end":12},"name":"Mailbox","qualname":"::address::Address::Mailbox","value":"Address::Mailbox(Mailbox)","parent":{"krate":0,"index":407},"children":[],"decl_id":null,"docs":" A \"regular\" email address\n","sig":null,"attributes":[{"value":"/ A \"regular\" email address","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":65117,"byte_end":65146,"line_start":12,"line_end":12,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":411},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":65208,"byte_end":65213,"line_start":15,"line_end":15,"column_start":5,"column_end":10},"name":"Group","qualname":"::address::Address::Group","value":"Address::Group(String, Vec<Mailbox>)","parent":{"krate":0,"index":407},"children":[],"decl_id":null,"docs":" A named group of mailboxes\n","sig":null,"attributes":[{"value":"/ A named group of mailboxes","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":65173,"byte_end":65203,"line_start":14,"line_end":14,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":407},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":65103,"byte_end":65110,"line_start":11,"line_end":11,"column_start":10,"column_end":17},"name":"Address","qualname":"::address::Address","value":"pub enum Address {\n\n    /// A \"regular\" email address\n    Mailbox(Mailbox),\n\n    /// A named group of mailboxes\n    Group(String, Vec<Mailbox>),\n}","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":411}],"decl_id":null,"docs":" Represents an RFC 5322 Address\n","sig":null,"attributes":[{"value":"/ Represents an RFC 5322 Address","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":65020,"byte_end":65054,"line_start":9,"line_end":9,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":65356,"byte_end":65367,"line_start":21,"line_end":21,"column_start":12,"column_end":23},"name":"new_mailbox","qualname":"<Address>::new_mailbox","value":"pub fn new_mailbox(String) -> Address","parent":null,"children":[],"decl_id":null,"docs":" Shortcut function to make a new Mailbox with the given address\n [unstable]\n","sig":null,"attributes":[{"value":"/ Shortcut function to make a new Mailbox with the given address","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":65259,"byte_end":65325,"line_start":19,"line_end":19,"column_start":5,"column_end":71}},{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":65330,"byte_end":65344,"line_start":20,"line_end":20,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":65563,"byte_end":65584,"line_start":27,"line_end":27,"column_start":12,"column_end":33},"name":"new_mailbox_with_name","qualname":"<Address>::new_mailbox_with_name","value":"pub fn new_mailbox_with_name(String, String) -> Address","parent":null,"children":[],"decl_id":null,"docs":" Shortcut function to make a new Mailbox with the address and given-name\n [unstable]\n","sig":null,"attributes":[{"value":"/ Shortcut function to make a new Mailbox with the address and given-name","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":65457,"byte_end":65532,"line_start":25,"line_end":25,"column_start":5,"column_end":80}},{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":65537,"byte_end":65551,"line_start":26,"line_end":26,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":65807,"byte_end":65816,"line_start":33,"line_end":33,"column_start":12,"column_end":21},"name":"new_group","qualname":"<Address>::new_group","value":"pub fn new_group(String, Vec<Mailbox>) -> Address","parent":null,"children":[],"decl_id":null,"docs":" Shortcut function to make a new Group with a collection of mailboxes\n [unstable]\n","sig":null,"attributes":[{"value":"/ Shortcut function to make a new Group with a collection of mailboxes","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":65704,"byte_end":65776,"line_start":31,"line_end":31,"column_start":5,"column_end":77}},{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":65781,"byte_end":65795,"line_start":32,"line_end":32,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":426},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":66713,"byte_end":66720,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"Mailbox","qualname":"::address::Mailbox","value":"Mailbox { name, address }","parent":null,"children":[{"krate":0,"index":427},{"krate":0,"index":428}],"decl_id":null,"docs":" Represents an RFC 5322 mailbox\n","sig":null,"attributes":[{"value":"/ Represents an RFC 5322 mailbox","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":66628,"byte_end":66662,"line_start":57,"line_end":57,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":427},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":66771,"byte_end":66775,"line_start":61,"line_end":61,"column_start":9,"column_end":13},"name":"name","qualname":"::address::Mailbox::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" The given name for this address\n","sig":null,"attributes":[{"value":"/ The given name for this address","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":66727,"byte_end":66762,"line_start":60,"line_end":60,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":428},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":66829,"byte_end":66836,"line_start":63,"line_end":63,"column_start":9,"column_end":16},"name":"address","qualname":"::address::Mailbox::address","value":"std::string::String","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" The mailbox address\n","sig":null,"attributes":[{"value":"/ The mailbox address","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":66797,"byte_end":66820,"line_start":62,"line_end":62,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":66927,"byte_end":66930,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"new","qualname":"<Mailbox>::new","value":"pub fn new(String) -> Mailbox","parent":null,"children":[],"decl_id":null,"docs":" Create a new Mailbox without a display name\n","sig":null,"attributes":[{"value":"/ Create a new Mailbox without a display name","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":66868,"byte_end":66915,"line_start":67,"line_end":67,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":67109,"byte_end":67122,"line_start":76,"line_end":76,"column_start":12,"column_end":25},"name":"new_with_name","qualname":"<Mailbox>::new_with_name","value":"pub fn new_with_name(String, String) -> Mailbox","parent":null,"children":[],"decl_id":null,"docs":" Create a new Mailbox with a display name\n","sig":null,"attributes":[{"value":"/ Create a new Mailbox with a display name","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":67053,"byte_end":67097,"line_start":75,"line_end":75,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":441},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":79349,"byte_end":79354,"line_start":28,"line_end":28,"column_start":5,"column_end":10},"name":"Mixed","qualname":"::message::MimeMultipartType::Mixed","value":"MimeMultipartType::Mixed","parent":{"krate":0,"index":440},"children":[],"decl_id":null,"docs":" Entries which are independent.","sig":null,"attributes":[{"value":"/ Entries which are independent.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":79211,"byte_end":79245,"line_start":23,"line_end":23,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":79250,"byte_end":79253,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ This value is the default.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":79258,"byte_end":79288,"line_start":25,"line_end":25,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":79293,"byte_end":79296,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ As defined by Section 5.1.3 of RFC 2046","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":79301,"byte_end":79344,"line_start":27,"line_end":27,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":443},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":79532,"byte_end":79543,"line_start":33,"line_end":33,"column_start":5,"column_end":16},"name":"Alternative","qualname":"::message::MimeMultipartType::Alternative","value":"MimeMultipartType::Alternative","parent":{"krate":0,"index":440},"children":[],"decl_id":null,"docs":" Entries which are interchangeable, such that the system can choose\n whichever is \"best\" for its use.","sig":null,"attributes":[{"value":"/ Entries which are interchangeable, such that the system can choose","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":79360,"byte_end":79430,"line_start":29,"line_end":29,"column_start":5,"column_end":75}},{"value":"/ whichever is \"best\" for its use.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":79435,"byte_end":79471,"line_start":30,"line_end":30,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":79476,"byte_end":79479,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ As defined by Section 5.1.4 of RFC 2046","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":79484,"byte_end":79527,"line_start":32,"line_end":32,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":445},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":79663,"byte_end":79669,"line_start":37,"line_end":37,"column_start":5,"column_end":11},"name":"Digest","qualname":"::message::MimeMultipartType::Digest","value":"MimeMultipartType::Digest","parent":{"krate":0,"index":440},"children":[],"decl_id":null,"docs":" Entries are (typically) a collection of messages.","sig":null,"attributes":[{"value":"/ Entries are (typically) a collection of messages.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":79549,"byte_end":79602,"line_start":34,"line_end":34,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":79607,"byte_end":79610,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ As defined by Section 5.1.5 of RFC 2046","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":79615,"byte_end":79658,"line_start":36,"line_end":36,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":447},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":79807,"byte_end":79815,"line_start":41,"line_end":41,"column_start":5,"column_end":13},"name":"Parallel","qualname":"::message::MimeMultipartType::Parallel","value":"MimeMultipartType::Parallel","parent":{"krate":0,"index":440},"children":[],"decl_id":null,"docs":" Entry order does not matter, and could be displayed simultaneously.","sig":null,"attributes":[{"value":"/ Entry order does not matter, and could be displayed simultaneously.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":79675,"byte_end":79746,"line_start":38,"line_end":38,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":79751,"byte_end":79754,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ As defined by Section 5.1.6 of RFC 2046","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":79759,"byte_end":79802,"line_start":40,"line_end":40,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":440},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":79187,"byte_end":79204,"line_start":22,"line_end":22,"column_start":10,"column_end":27},"name":"MimeMultipartType","qualname":"::message::MimeMultipartType","value":"pub enum MimeMultipartType {\n\n    /// Entries which are independent.\n    ///\n    /// This value is the default.\n    ///\n    /// As defined by Section 5.1.3 of RFC 2046\n    Mixed,\n\n    /// Entries which are interchangeable, such that the system can choose\n    /// whichever is \"best\" for its use.\n    ///\n    /// As defined by Section 5.1.4 of RFC 2046\n    Alternative,\n\n    /// Entries are (typically) a collection of messages.\n    ///\n    /// As defined by Section 5.1.5 of RFC 2046\n    Digest,\n\n    /// Entry order does not matter, and could be displayed simultaneously.\n    ///\n    /// As defined by Section 5.1.6 of RFC 2046\n    Parallel,\n}","parent":null,"children":[{"krate":0,"index":441},{"krate":0,"index":443},{"krate":0,"index":445},{"krate":0,"index":447}],"decl_id":null,"docs":" Marks the type of a multipart message\n","sig":null,"attributes":[{"value":"/ Marks the type of a multipart message","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":79095,"byte_end":79136,"line_start":20,"line_end":20,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":79938,"byte_end":79955,"line_start":46,"line_end":46,"column_start":12,"column_end":29},"name":"from_content_type","qualname":"<MimeMultipartType>::from_content_type","value":"pub fn from_content_type(MimeContentType) -> Option<MimeMultipartType>","parent":null,"children":[],"decl_id":null,"docs":" Returns the appropriate `MimeMultipartType` for the given MimeContentType\n","sig":null,"attributes":[{"value":"/ Returns the appropriate `MimeMultipartType` for the given MimeContentType","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":79849,"byte_end":79926,"line_start":45,"line_end":45,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":80523,"byte_end":80538,"line_start":58,"line_end":58,"column_start":12,"column_end":27},"name":"to_content_type","qualname":"<MimeMultipartType>::to_content_type","value":"pub fn to_content_type(&Self) -> MimeContentType","parent":null,"children":[],"decl_id":null,"docs":" Returns a MimeContentType that represents this multipart type.\n","sig":null,"attributes":[{"value":"/ Returns a MimeContentType that represents this multipart type.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":80445,"byte_end":80511,"line_start":57,"line_end":57,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":460},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":81065,"byte_end":81076,"line_start":72,"line_end":72,"column_start":12,"column_end":23},"name":"MimeMessage","qualname":"::message::MimeMessage","value":"MimeMessage { headers, body, message_type, children, boundary }","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465}],"decl_id":null,"docs":" Represents a MIME message\n [unstable]\n","sig":null,"attributes":[{"value":"/ Represents a MIME message","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":80973,"byte_end":81002,"line_start":69,"line_end":69,"column_start":1,"column_end":30}},{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":81003,"byte_end":81017,"line_start":70,"line_end":70,"column_start":1,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":461},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":81124,"byte_end":81131,"line_start":74,"line_end":74,"column_start":9,"column_end":16},"name":"headers","qualname":"::message::MimeMessage::headers","value":"header::HeaderMap","parent":{"krate":0,"index":460},"children":[],"decl_id":null,"docs":" The headers for this message\n","sig":null,"attributes":[{"value":"/ The headers for this message","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":81083,"byte_end":81115,"line_start":73,"line_end":73,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":462},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":81305,"byte_end":81309,"line_start":80,"line_end":80,"column_start":9,"column_end":13},"name":"body","qualname":"::message::MimeMessage::body","value":"std::string::String","parent":{"krate":0,"index":460},"children":[],"decl_id":null,"docs":" The content of this message","sig":null,"attributes":[{"value":"/ The content of this message","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":81149,"byte_end":81180,"line_start":76,"line_end":76,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":81185,"byte_end":81188,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Keep in mind that this is the undecoded form, so may be quoted-printable","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":81193,"byte_end":81269,"line_start":78,"line_end":78,"column_start":5,"column_end":81}},{"value":"/ or base64 encoded.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":81274,"byte_end":81296,"line_start":79,"line_end":79,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":463},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":81446,"byte_end":81458,"line_start":84,"line_end":84,"column_start":9,"column_end":21},"name":"message_type","qualname":"::message::MimeMessage::message_type","value":"std::option::Option<message::MimeMultipartType>","parent":{"krate":0,"index":460},"children":[],"decl_id":null,"docs":" The MIME multipart message type of this message, or `None` if the message\n is not a multipart message.\n","sig":null,"attributes":[{"value":"/ The MIME multipart message type of this message, or `None` if the message","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":81324,"byte_end":81401,"line_start":82,"line_end":82,"column_start":5,"column_end":82}},{"value":"/ is not a multipart message.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":81406,"byte_end":81437,"line_start":83,"line_end":83,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":464},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":81537,"byte_end":81545,"line_start":87,"line_end":87,"column_start":9,"column_end":17},"name":"children","qualname":"::message::MimeMessage::children","value":"std::vec::Vec<message::MimeMessage>","parent":{"krate":0,"index":460},"children":[],"decl_id":null,"docs":" The sub-messages of this message\n","sig":null,"attributes":[{"value":"/ The sub-messages of this message","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":81492,"byte_end":81528,"line_start":86,"line_end":86,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":465},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":81712,"byte_end":81720,"line_start":92,"line_end":92,"column_start":9,"column_end":17},"name":"boundary","qualname":"::message::MimeMessage::boundary","value":"std::string::String","parent":{"krate":0,"index":460},"children":[],"decl_id":null,"docs":" The boundary used for MIME multipart messages","sig":null,"attributes":[{"value":"/ The boundary used for MIME multipart messages","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":81570,"byte_end":81619,"line_start":89,"line_end":89,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":81624,"byte_end":81627,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ This will always be set, even if the message only has a single part","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":81632,"byte_end":81703,"line_start":91,"line_end":91,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":81897,"byte_end":81900,"line_start":101,"line_end":101,"column_start":12,"column_end":15},"name":"new","qualname":"<MimeMessage>::new","value":"pub fn new(String) -> MimeMessage","parent":null,"children":[],"decl_id":null,"docs":" [unstable]\n","sig":null,"attributes":[{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":81871,"byte_end":81885,"line_start":100,"line_end":100,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":82089,"byte_end":82106,"line_start":108,"line_end":108,"column_start":12,"column_end":29},"name":"new_with_children","qualname":"<MimeMessage>::new_with_children","value":"pub fn new_with_children(String, MimeMultipartType, Vec<MimeMessage>)\n-> MimeMessage","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":82444,"byte_end":82461,"line_start":117,"line_end":117,"column_start":12,"column_end":29},"name":"new_with_boundary","qualname":"<MimeMessage>::new_with_boundary","value":"pub fn new_with_boundary(String, MimeMultipartType, Vec<MimeMessage>, String)\n-> MimeMessage","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":82941,"byte_end":82958,"line_start":130,"line_end":130,"column_start":12,"column_end":29},"name":"new_blank_message","qualname":"<MimeMessage>::new_blank_message","value":"pub fn new_blank_message() -> MimeMessage","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":83477,"byte_end":83491,"line_start":146,"line_end":146,"column_start":12,"column_end":26},"name":"update_headers","qualname":"<MimeMessage>::update_headers","value":"pub fn update_headers(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Update the headers on this message based on the internal state.","sig":null,"attributes":[{"value":"/ Update the headers on this message based on the internal state.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":83215,"byte_end":83282,"line_start":141,"line_end":141,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":83287,"byte_end":83290,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ When certain properties of the message are modified, the headers","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":83295,"byte_end":83363,"line_start":143,"line_end":143,"column_start":5,"column_end":73}},{"value":"/ used to represent them are not automatically updated.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":83368,"byte_end":83425,"line_start":144,"line_end":144,"column_start":5,"column_end":62}},{"value":"/ Call this if these are changed.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":83430,"byte_end":83465,"line_start":145,"line_end":145,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":84576,"byte_end":84581,"line_start":175,"line_end":175,"column_start":12,"column_end":17},"name":"parse","qualname":"<MimeMessage>::parse","value":"pub fn parse(&str) -> ParsingResult<MimeMessage>","parent":null,"children":[],"decl_id":null,"docs":" Parse `s` into a MimeMessage.","sig":null,"attributes":[{"value":"/ Parse `s` into a MimeMessage.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":84327,"byte_end":84360,"line_start":169,"line_end":169,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":84365,"byte_end":84368,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ Recurses down into each message, supporting an unlimited depth of messages.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":84373,"byte_end":84452,"line_start":171,"line_end":171,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":84457,"byte_end":84460,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Be warned that each sub-message that fails to be parsed will be thrown away.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":84465,"byte_end":84545,"line_start":173,"line_end":173,"column_start":5,"column_end":85}},{"value":"/ [unstable]","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":84550,"byte_end":84564,"line_start":174,"line_end":174,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":84906,"byte_end":84915,"line_start":183,"line_end":183,"column_start":12,"column_end":21},"name":"as_string","qualname":"<MimeMessage>::as_string","value":"pub fn as_string(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":85245,"byte_end":85270,"line_start":195,"line_end":195,"column_start":12,"column_end":37},"name":"as_string_without_headers","qualname":"<MimeMessage>::as_string_without_headers","value":"pub fn as_string_without_headers(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":86042,"byte_end":86060,"line_start":221,"line_end":221,"column_start":12,"column_end":30},"name":"decoded_body_bytes","qualname":"<MimeMessage>::decoded_body_bytes","value":"pub fn decoded_body_bytes(&Self) -> Option<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Decode the body of this message, as a series of bytes\n","sig":null,"attributes":[{"value":"/ Decode the body of this message, as a series of bytes","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":85973,"byte_end":86030,"line_start":220,"line_end":220,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":86559,"byte_end":86578,"line_start":232,"line_end":232,"column_start":12,"column_end":31},"name":"decoded_body_string","qualname":"<MimeMessage>::decoded_body_string","value":"pub fn decoded_body_string(&Self) -> ParsingResult<String>","parent":null,"children":[],"decl_id":null,"docs":" Decode the body of this message, as a string.","sig":null,"attributes":[{"value":"/ Decode the body of this message, as a string.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":86357,"byte_end":86406,"line_start":228,"line_end":228,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":86411,"byte_end":86414,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ This takes into account any charset as set on the `Content-Type` header,","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":86419,"byte_end":86495,"line_start":230,"line_end":230,"column_start":5,"column_end":81}},{"value":"/ decoding the bytes with this character set.","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":86500,"byte_end":86547,"line_start":231,"line_end":231,"column_start":5,"column_end":52}}]}],"impls":[{"id":1,"kind":"Inherent","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":2231,"byte_end":2244,"line_start":62,"line_end":62,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":14220,"byte_end":14234,"line_start":454,"line_end":454,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc2045.rs","byte_start":27626,"byte_end":27639,"line_start":13,"line_end":13,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc822.rs","byte_start":32593,"byte_end":32609,"line_start":52,"line_end":52,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/mimeheaders.rs","byte_start":42276,"byte_end":42297,"line_start":25,"line_end":25,"column_start":21,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/mimeheaders.rs","byte_start":42894,"byte_end":42915,"line_start":43,"line_end":43,"column_start":19,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/mimeheaders.rs","byte_start":43748,"byte_end":43775,"line_start":69,"line_end":69,"column_start":6,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/mimeheaders.rs","byte_start":44400,"byte_end":44427,"line_start":84,"line_end":84,"column_start":21,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/results.rs","byte_start":50450,"byte_end":50462,"line_start":9,"line_end":9,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/results.rs","byte_start":50582,"byte_end":50594,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/results.rs","byte_start":50730,"byte_end":50742,"line_start":25,"line_end":25,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":52293,"byte_end":52294,"line_start":48,"line_end":48,"column_start":38,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":52508,"byte_end":52514,"line_start":55,"line_end":55,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":55347,"byte_end":55355,"line_start":126,"line_end":126,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":55570,"byte_end":55578,"line_start":133,"line_end":133,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":55810,"byte_end":55816,"line_start":140,"line_end":140,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":56281,"byte_end":56287,"line_start":161,"line_end":161,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":56425,"byte_end":56431,"line_start":168,"line_end":168,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":57383,"byte_end":57389,"line_start":196,"line_end":196,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":57607,"byte_end":57617,"line_start":207,"line_end":207,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":57793,"byte_end":57803,"line_start":216,"line_end":216,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":58514,"byte_end":58523,"line_start":243,"line_end":243,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":230},{"krate":0,"index":232},{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":65245,"byte_end":65252,"line_start":18,"line_end":18,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":65940,"byte_end":65947,"line_start":38,"line_end":38,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":66854,"byte_end":66861,"line_start":66,"line_end":66,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":255},{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":67285,"byte_end":67292,"line_start":84,"line_end":84,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":67561,"byte_end":67568,"line_start":93,"line_end":93,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":67682,"byte_end":67689,"line_start":99,"line_end":99,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":67829,"byte_end":67836,"line_start":105,"line_end":105,"column_start":57,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":68006,"byte_end":68013,"line_start":112,"line_end":112,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":68174,"byte_end":68177,"line_start":120,"line_end":120,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":68349,"byte_end":68352,"line_start":126,"line_end":126,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":69140,"byte_end":69153,"line_start":156,"line_end":156,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":79825,"byte_end":79842,"line_start":44,"line_end":44,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":81738,"byte_end":81749,"line_start":95,"line_end":95,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","byte_start":408,"byte_end":415,"line_start":25,"line_end":25,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":21}},{"kind":"Mod","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","byte_start":425,"byte_end":432,"line_start":26,"line_end":26,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":79}},{"kind":"Mod","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","byte_start":442,"byte_end":449,"line_start":27,"line_end":27,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":87}},{"kind":"Mod","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","byte_start":459,"byte_end":465,"line_start":28,"line_end":28,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":100}},{"kind":"Mod","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","byte_start":475,"byte_end":486,"line_start":29,"line_end":29,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":127}},{"kind":"Mod","span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/lib.rs","byte_start":496,"byte_end":503,"line_start":30,"line_end":30,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":151}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":2231,"byte_end":2244,"line_start":62,"line_end":62,"column_start":10,"column_end":23},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":39},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc5322.rs","byte_start":14220,"byte_end":14234,"line_start":454,"line_end":454,"column_start":6,"column_end":20},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":72},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc2045.rs","byte_start":27626,"byte_end":27639,"line_start":13,"line_end":13,"column_start":10,"column_end":23},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":90},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/rfc822.rs","byte_start":32593,"byte_end":32609,"line_start":52,"line_end":52,"column_start":10,"column_end":26},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":115},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/mimeheaders.rs","byte_start":42276,"byte_end":42297,"line_start":25,"line_end":25,"column_start":21,"column_end":42},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":140},"to":{"krate":0,"index":179}},{"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/mimeheaders.rs","byte_start":42894,"byte_end":42915,"line_start":43,"line_end":43,"column_start":19,"column_end":40},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":140},"to":{"krate":0,"index":181}},{"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/mimeheaders.rs","byte_start":43748,"byte_end":43775,"line_start":69,"line_end":69,"column_start":6,"column_end":33},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":338},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/mimeheaders.rs","byte_start":44400,"byte_end":44427,"line_start":84,"line_end":84,"column_start":21,"column_end":48},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":338},"to":{"krate":0,"index":179}},{"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/results.rs","byte_start":50450,"byte_end":50462,"line_start":9,"line_end":9,"column_start":23,"column_end":35},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":356},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/results.rs","byte_start":50582,"byte_end":50594,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":356},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/results.rs","byte_start":50730,"byte_end":50742,"line_start":25,"line_end":25,"column_start":6,"column_end":18},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":51340,"byte_end":51345,"line_start":20,"line_end":20,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":1932},"to":{"krate":0,"index":179}},{"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":52293,"byte_end":52294,"line_start":48,"line_end":48,"column_start":38,"column_end":39},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":186},"to":{"krate":0,"index":183}},{"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":52508,"byte_end":52514,"line_start":55,"line_end":55,"column_start":21,"column_end":27},"kind":{"Impl":{"id":13}},"from":{"krate":5,"index":4932},"to":{"krate":0,"index":179}},{"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":55347,"byte_end":55355,"line_start":126,"line_end":126,"column_start":21,"column_end":29},"kind":{"Impl":{"id":14}},"from":{"krate":24,"index":1801},"to":{"krate":0,"index":179}},{"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":55570,"byte_end":55578,"line_start":133,"line_end":133,"column_start":21,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":24,"index":1801},"to":{"krate":0,"index":179}},{"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":55810,"byte_end":55816,"line_start":140,"line_end":140,"column_start":19,"column_end":25},"kind":{"Impl":{"id":16}},"from":{"krate":5,"index":4932},"to":{"krate":0,"index":181}},{"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":56281,"byte_end":56287,"line_start":161,"line_end":161,"column_start":57,"column_end":63},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":376},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":56425,"byte_end":56431,"line_start":168,"line_end":168,"column_start":6,"column_end":12},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":376},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":57383,"byte_end":57389,"line_start":196,"line_end":196,"column_start":23,"column_end":29},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":376},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":57607,"byte_end":57617,"line_start":207,"line_end":207,"column_start":10,"column_end":20},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":57793,"byte_end":57803,"line_start":216,"line_end":216,"column_start":23,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":213},"to":{"krate":2,"index":4989}},{"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/header.rs","byte_start":58514,"byte_end":58523,"line_start":243,"line_end":243,"column_start":6,"column_end":15},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":65245,"byte_end":65252,"line_start":18,"line_end":18,"column_start":6,"column_end":13},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":407},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":65940,"byte_end":65947,"line_start":38,"line_end":38,"column_start":23,"column_end":30},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":407},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":66854,"byte_end":66861,"line_start":66,"line_end":66,"column_start":6,"column_end":13},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":67285,"byte_end":67292,"line_start":84,"line_end":84,"column_start":23,"column_end":30},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":426},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":67561,"byte_end":67568,"line_start":93,"line_end":93,"column_start":28,"column_end":35},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":426},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":67682,"byte_end":67689,"line_start":99,"line_end":99,"column_start":23,"column_end":30},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":426},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":67829,"byte_end":67836,"line_start":105,"line_end":105,"column_start":57,"column_end":64},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":426},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":68006,"byte_end":68013,"line_start":112,"line_end":112,"column_start":18,"column_end":25},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":426},"to":{"krate":2,"index":7734}},{"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":68174,"byte_end":68177,"line_start":120,"line_end":120,"column_start":21,"column_end":24},"kind":{"Impl":{"id":31}},"from":{"krate":5,"index":4232},"to":{"krate":0,"index":179}},{"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":68349,"byte_end":68352,"line_start":126,"line_end":126,"column_start":25,"column_end":28},"kind":{"Impl":{"id":32}},"from":{"krate":5,"index":4232},"to":{"krate":0,"index":183}},{"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/address.rs","byte_start":69140,"byte_end":69153,"line_start":156,"line_end":156,"column_start":10,"column_end":23},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":275},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":79825,"byte_end":79842,"line_start":44,"line_end":44,"column_start":6,"column_end":23},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":440},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mich/.cargo/registry/src/github.com-1ecc6299db9ec823/email-0.0.20/src/message.rs","byte_start":81738,"byte_end":81749,"line_start":95,"line_end":95,"column_start":6,"column_end":17},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":460},"to":{"krate":4294967295,"index":4294967295}}]}